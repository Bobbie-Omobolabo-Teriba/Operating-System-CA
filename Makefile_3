CC      = gcc
FLAGS   = -Wall -Wextra -Wpedantic
SOURCES = $(wildcard *.c) $(wildcard lib/*.c)
OBJECTS = $(patsubst %.c, build/%.o, ${SOURCES})

# This target is the final compile and depends on other targets
link: ${OBJECTS}
	${CC} $^ -o build/main

# This target compiles just main.cpp (creates an object file)
build/main.o: main.c
	${CC} -c ${FLAGS} $< -o $@

# This target compiles just lib/*.o (creates an object files)
build/lib/%.o: lib/%.c
	${CC} -c ${FLAGS} $< -o $@

# Remove all built files, and re-create the bin directory
clean:
	rm -rf ./build && mkdir -p build/lib

# Run the solution (FYI: we could make run dependent on link)
# Print last 10 lines of the file
run-task-1:
	@tail -n 10 access.log

# Run second solution in third section - Print unique IP addresses
run-task-2:
	@sort -u -t' ' -k1,1 access.log

#	Run third solution in third section - print only REQUEST portion with error code '404'
run-task-3:
	@grep ' 404 ' access.log | cut -d '"' -f2

#	Run fourth solution in third section -
run-task-4:
	@cat access.log | grep ' 404 '

CC      = gcc
FLAGS   = -Wall -Wextra -Wpedantic
SOURCES = $(wildcard *.c) $(wildcard lib/*.c)
OBJECTS = $(patsubst %.c, build/%.o, ${SOURCES})

# This target is the final compile and depends on other targets
link: ${OBJECTS}
	${CC} $^ -o build/main

# This target compiles just main.cpp (creates an object file)
build/main.o: main.c
	${CC} -c ${FLAGS} $< -o $@

# This target compiles just lib/*.o (creates an object files)
build/lib/%.o: lib/%.c
	${CC} -c ${FLAGS} $< -o $@

# Remove all built files, and re-create the bin directory
clean:
	rm -rf ./build && mkdir -p build/lib

# Display the colours using cat command
# Pipe the result in a while do loop which loops through each line in colours.txt
# If the line has 7 or 9 characters print the line - actually 6 or 8 digits the '#' is included
# The backticks ensures that evrything in between them is executed before the main commmand
# Use $$ which represents the line variable
run-task-1:
<<<<<<< HEAD
	@cat colours.txt | while read line; do if [ `echo -n $$line | wc -c` = 7 ] || [ `echo -n $$line | wc -c` = 9 ] ; then echo $$line ; fi ; done
=======
	@./build/main 'cat colours.txt'
>>>>>>> c83cef651fe023fd08b37c1af659586df89ad3d9
